name: Asset Compression Pipeline

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'client/public/assets/**'
      - 'tools/**'
      - '.github/workflows/asset-compression.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'client/public/assets/**'
      - 'tools/**'
      - '.github/workflows/asset-compression.yml'

jobs:
  compression-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          client/package-lock.json

    - name: Install KTX-Software (for toktx)
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://github.com/KhronosGroup/KTX-Software/releases/download/v4.3.2/KTX-Software-4.3.2-Linux-x86_64.deb
        sudo dpkg -i KTX-Software-4.3.2-Linux-x86_64.deb || true
        sudo apt-get install -f -y
        toktx --version || echo "toktx installation verification"

    - name: Install client dependencies
      run: |
        cd client
        npm ci

    - name: Test Compression Pipeline
      run: |
        chmod +x tools/test-compression.mjs
        node tools/test-compression.mjs

    - name: Run Asset Compression
      run: |
        chmod +x tools/compress-pipeline.mjs
        node tools/compress-pipeline.mjs

    - name: Validate Compression Results
      run: |
        if [ -f "dist-assets-compressed/compression-report.json" ]; then
          echo "‚úÖ Compression report generated"
          cat dist-assets-compressed/compression-report.json | jq '.stats.compressedSize, .budgetStatus.total.withinBudget'
        else
          echo "‚ùå Compression report not found"
          exit 1
        fi

    - name: Upload Compression Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: compression-report
        path: |
          dist-assets-compressed/compression-report.json
        retention-days: 30

    - name: Build with Compressed Assets
      run: |
        cd client
        npm run build
        echo "‚úÖ Build completed with compressed assets"

    - name: Final Size Report
      run: |
        echo "üìä Final asset sizes after compression:"
        node tools/size-report.mjs dist-assets-compressed
        
        echo "üìä Built bundle sizes:"
        node tools/size-report.mjs client/dist/assets

  performance-comparison:
    runs-on: ubuntu-latest
    needs: compression-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json

    - name: Install dependencies
      run: |
        cd client
        npm ci

    - name: Build without compression
      run: |
        cd client
        npm run build:fast
        echo "üìÅ Uncompressed build size:"
        du -sh dist/ || echo "Build directory not found"
        node ../tools/size-report.mjs public/assets > uncompressed-report.txt

    - name: Install KTX-Software
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://github.com/KhronosGroup/KTX-Software/releases/download/v4.3.2/KTX-Software-4.3.2-Linux-x86_64.deb
        sudo dpkg -i KTX-Software-4.3.2-Linux-x86_64.deb || true
        sudo apt-get install -f -y

    - name: Build with compression
      run: |
        node tools/compress-pipeline.mjs
        cd client
        npm run build
        echo "üìÅ Compressed build size:"
        du -sh dist/ || echo "Build directory not found"
        
    - name: Generate Performance Report
      run: |
        echo "# Asset Compression Performance Report" > performance-report.md
        echo "Generated on: $(date)" >> performance-report.md
        echo "" >> performance-report.md
        
        echo "## Uncompressed Assets" >> performance-report.md
        echo '```' >> performance-report.md
        cat uncompressed-report.txt >> performance-report.md || echo "Uncompressed report not found"
        echo '```' >> performance-report.md
        echo "" >> performance-report.md
        
        echo "## Compressed Assets" >> performance-report.md
        echo '```' >> performance-report.md
        node tools/size-report.mjs dist-assets-compressed >> performance-report.md || echo "Compressed report not found"
        echo '```' >> performance-report.md
        echo "" >> performance-report.md
        
        if [ -f "dist-assets-compressed/compression-report.json" ]; then
          echo "## Compression Statistics" >> performance-report.md
          echo '```json' >> performance-report.md
          cat dist-assets-compressed/compression-report.json | jq '.stats' >> performance-report.md
          echo '```' >> performance-report.md
        fi

    - name: Upload Performance Report
      uses: actions/upload-artifact@v4
      with:
        name: performance-report
        path: |
          performance-report.md
          uncompressed-report.txt
        retention-days: 30

    - name: Comment Performance Report (PR only)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## üì¶ Asset Compression Report\n\n';
          
          try {
            const report = fs.readFileSync('performance-report.md', 'utf8');
            comment += report;
          } catch (error) {
            comment += '‚ùå Could not generate performance report\n';
          }
          
          // Check if compression was successful
          if (fs.existsSync('dist-assets-compressed/compression-report.json')) {
            const compressionData = JSON.parse(fs.readFileSync('dist-assets-compressed/compression-report.json'));
            const savings = Math.round((1 - compressionData.stats.compressedSize / compressionData.stats.originalSize) * 100);
            
            comment += `\n### üéØ Compression Summary\n`;
            comment += `- **Total size reduction**: ${savings}%\n`;
            comment += `- **Files processed**: ${compressionData.stats.processed}\n`;
            comment += `- **Budget status**: ${compressionData.budgetStatus.total.withinBudget ? '‚úÖ Within budget' : '‚ùå Over budget'}\n`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
